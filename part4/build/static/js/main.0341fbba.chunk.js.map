{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","id","put","login","credentails","Notificaiton","message","className","App","useState","blogs","setBlogs","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","newBlog","setNewBlog","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","addBlog","event","preventDefault","blogObject","url","likes","returnedBlog","concat","handleLogin","loginService","setItem","stringnifu","setTimeout","handleBlogChange","target","value","Notification","onSubmit","type","name","onChange","map","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0341fbba.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: {Authorization: token}\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create, update }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentails => {\n  const response = await axios.post(baseUrl, credentails)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notificaiton = ({ message }) => (\n  <div><h1 className=\"error\">{message}</h1></div>\n)\n\nexport default Notificaiton","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [username, setUsername] = useState('') \n  const [password, setPassword] = useState('') \n  const [user, setUser] = useState(null)\n  const [newBlog, setNewBlog] = useState('')\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: newBlog.title,\n      author: newBlog.author,\n      url: newBlog.url,\n      likes: newBlog.likes\n    }\n    \n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setNewBlog('')\n      })\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({username, password})\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringnifu(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('Wrong credentails')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000);\n    }\n  }\n\n  const handleBlogChange = async (event) => {\n    setNewBlog(event.target.value)\n  }\n\n\n  const loginForm = () => (\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input\n          type=\"text\"\n          value={username}\n          name=\"Username\"\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n        password\n          <input\n          type=\"password\"\n          value={password}\n          name=\"Password\"\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button type=\"submit\">login</button>\n    </form>      \n  )\n\n  const blogForm = () => (\n    <form onSubmit={addBlog}>\n      <input\n        value={newBlog}\n        onChange={handleBlogChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>  \n  )\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={errorMessage} />\n\n      {user === null ?\n      loginForm() :\n      <div>\n        <p>{user.name} logged in</p>\n        {blogForm()}\n      </div>\n    }\n\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n\n     \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}