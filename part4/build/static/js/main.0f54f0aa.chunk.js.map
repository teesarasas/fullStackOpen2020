{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","components/Notification.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","App.js","index.js"],"names":["Blog","blog","user","updateLikes","deleteBlog","useState","viewHide","setViewHide","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","url","onClick","likes","name","username","baseUrl","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","update","id","put","delete","login","credentials","Notificaiton","status","message","LoginForm","handleSubmit","handleUsernameChange","handlePasswordChange","password","onSubmit","value","onChange","type","BlogForm","createBlog","newTitle","setNewTitle","newAuthor","setNewAuthor","newUrl","setNewUrl","event","preventDefault","target","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","App","blogs","setBlogs","errorMessage","setErrorMessage","errorClass","setErrorClass","setUsername","setPassword","setUser","loginVisible","setLoginVisible","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogFormRef","useRef","addBlog","blogObject","current","returnedBlog","concat","setTimeout","handleLogin","loginService","setItem","stringify","sortedBlogsByLikes","sort","b","Notification","loginForm","removeItem","map","find","changedBlog","updateBlog","confirm","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0f54f0aa.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, user, updateLikes, deleteBlog, }) => {\n  const [viewHide, setViewHide] = useState(true)\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  const toggleViewHide = () => (\n    setViewHide(!viewHide)\n  )\n\n  const viewBlog = () => {\n    return (\n      <div className=\"blog\">\n        {blog.url}<br />\n        likes {blog.likes} <button className=\"likesButton\" onClick={updateLikes}>like</button><br />\n        {user.name}<br />\n        {blog.user.username === user.username &&\n        <button onClick={deleteBlog}>remove</button>\n        }\n      </div>\n    )\n  }\n\n  return (\n    <div style={blogStyle} className='blogRender'>\n      {blog.title} {blog.author} {blog.url} <button className=\"viewHide\" onClick={() => {toggleViewHide()}}>{viewHide ? 'view' : 'hide'}</button>\n      {viewHide === false && viewBlog()}\n    </div>\n  )\n}\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteBlog = (id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const request = axios.delete(`${baseUrl}/${id}`, config)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, setToken, create, update, deleteBlog }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import React from 'react'\n\nconst Notificaiton = ({ status, message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={status}>\n      {message}\n    </div>\n  )\n}\n\nexport default Notificaiton","import PropTypes from 'prop-types'\nimport React from 'react'\n\nconst LoginForm = ({\n  handleSubmit,\n  handleUsernameChange,\n  handlePasswordChange,\n  username,\n  password\n}) => {\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleSubmit}>\n        <div>\n          username\n          <input id='username'\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input id='password'\n            type='password'\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button id=\"login-button\" type='submit'>login</button>\n      </form>\n    </div>\n  )\n}\n\nLoginForm.propTypes = {\n  handleSubmit: PropTypes.func.isRequired,\n  handleUsernameChange: PropTypes.func.isRequired,\n  handlePasswordChange: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm","import React, { useState } from 'react'\n\n\nconst BlogForm = ({ createBlog }) => {\n  const [newTitle, setNewTitle] = useState('')\n  const [newAuthor, setNewAuthor] = useState('')\n  const [newUrl, setNewUrl] = useState('')\n\n  const addBlog = (event) => {\n    event.preventDefault()\n    createBlog({\n      title: newTitle,\n      author: newAuthor,\n      url: newUrl\n    })\n    setNewTitle('')\n    setNewAuthor('')\n    setNewUrl('')\n  }\n\n  return (\n    <div>\n      <h2>Create a new blog</h2>\n      <form onSubmit={addBlog}>\n\n        <label>\n        title:\n          <input id='title'\n            value={newTitle}\n            onChange={({ target }) => setNewTitle(target.value)}\n          />\n        </label>\n        <br />\n        <label>\n        author:\n          <input id='author'\n            value={newAuthor}\n            onChange={({ target }) => setNewAuthor(target.value)}\n          />\n        </label>\n        <br />\n        <label>\n        url:\n          <input id='url'\n            value={newUrl}\n            onChange={({ target }) => setNewUrl(target.value)}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default BlogForm","import PropTypes from 'prop-types'\nimport React,{ useState, useImperativeHandle } from 'react'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display : visible ? 'none' : '' }\n  const showWhenVisible = { display : visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nexport default Togglable","import React, { useState, useEffect, useRef } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport Togglable from './components/Togglable'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [errorClass, setErrorClass] = useState(null)\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [loginVisible, setLoginVisible] = useState(false)\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const blogFormRef = useRef()\n\n  const addBlog = (blogObject) => {\n    blogFormRef.current.toggleVisibility()\n    blogService\n      .create(blogObject)\n      .then(returnedBlog => {\n        setBlogs(blogs.concat(returnedBlog))\n        setErrorClass('success')\n        setErrorMessage(`${returnedBlog.title} by ${returnedBlog.author} added`)\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  }\n\n  const updateBlog = (id) => {\n    const blog = blogs.find(b => b.id === id)\n    const changedBlog = { ...blog, likes: blog.likes += 1 }\n    blogService\n      .update(id, changedBlog)\n      .then(returnedBlog => {\n        setBlogs(blogs.map(blog => blog.id !== id ? blog : returnedBlog))\n      })\n  }\n\n  const deleteBlog = (id) => {\n    const blog = blogs.find(b => b.id === id)\n    const confirmToDelete = window.confirm(`remove blog ${blog.title} by ${blog.author}`)\n    if (confirmToDelete) {\n      blogService\n        .deleteBlog(id)\n        .then(() => {\n          setBlogs(blogs.filter(b => b.id !== id))\n        })\n    }\n  }\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('loggedBlogappUser', JSON.stringify(user))\n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorClass('error')\n      setErrorMessage('Wrong username or password')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n    }\n  }\n\n  const blogForm = () => (\n    <Togglable buttonLabel='create blog' ref={blogFormRef}>\n      <BlogForm createBlog={addBlog} />\n    </Togglable>\n  )\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n    setUsername('')\n    setPassword('')\n  }\n\n  const loginForm = () => {\n    const hideWhenVisible = { display: loginVisible ? 'none' : '' }\n    const showWhenVisible = { display: loginVisible ? '' : 'none' }\n\n    return (\n      <div>\n        <div style={hideWhenVisible}>\n          <button onClick={() => setLoginVisible(true)}>log in</button>\n        </div>\n        <div style={showWhenVisible}>\n          <LoginForm\n            username={username}\n            password={password}\n            handleUsernameChange={({ target }) => setUsername(target.value)}\n            handlePasswordChange={({ target }) => setPassword(target.value)}\n            handleSubmit={handleLogin}\n          />\n          <button onClick={() => setLoginVisible(false)}>cancel</button>\n        </div>\n      </div>\n    )\n  }\n\n  const sortedBlogsByLikes = blogs.sort((a, b) => b.likes - a.likes)\n\n  return (\n    <div>\n      <h2>blogs</h2>\n\n      <Notification status={errorClass} message={errorMessage} />\n\n      {user === null ?\n        loginForm() :\n        <div>\n          <p>{user.name} logged in<button onClick={() => handleLogout()}>logout</button></p>\n          {blogForm()}\n          {sortedBlogsByLikes.map(blog =>\n            <Blog\n              key={blog.id}\n              blog={blog}\n              user={user}\n              updateLikes={() => {updateBlog(blog.id)}}\n              deleteBlog={() => {deleteBlog(blog.id)}}\n            />\n          )}\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}